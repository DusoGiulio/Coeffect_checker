@CoeffectClass
class Nat {
	boolean leq(Nat x) {
		return true;
	}

	Nat sup(Nat x) {
		Nat result;
		if (this.leq(x)){
			result = x;}
		else{
			result = this;}
		return result;
	}

	Nat sum(Nat x) {
		return x;
	}

	Nat mult(Nat x) {
		return this;
	}

	static Nat zero() {
		return new Zero();
	}

	static Nat one(){
		Nat result;
		result = new Succ().setPred(Nat.zero());
		return result;
	}
	
	static Nat fromNat(Nat n) {
		return n;
	}
}



@CoeffectClass
class Triv {
	boolean leq(Triv t) {
		return true;
	}

	Triv sup(Triv t) {
		return this;
	}

	Triv sum(Triv t) {
		return this;
	}

	Triv mult(Triv t) {
		return this;
	}

	static Triv zero() {
		return new Triv();
	}

	static Triv one() {
		return new Triv();
	}
	
	static Triv fromNat(Nat n) {
		return new Triv();
	}
}

