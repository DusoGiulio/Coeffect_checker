// Generated from miniJava.g4 by ANTLR 4.4

    package parser.ANTLR4;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class miniJavaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		BOOLEAN=1, INSTANCEOF=2, CLASS=3, ELSE=4, EXTENDS=5, IF=6, INT=7, NEW=8, 
		PUBLIC=9, RETURN=10, STATIC=11, THIS=12, VOID=13, WHILE=14, MAIN=15, ABSTRACT=16, 
		STRING=17, SOP=18, LENGTH=19, COEFCLASS=20, COEFSUBCLASS=21, COEFFECT=22, 
		CF=23, EXP=24, DECIMAL_LITERAL=25, BOOL_LITERAL=26, LPAREN=27, RPAREN=28, 
		LBRACE=29, RBRACE=30, LBRACK=31, RBRACK=32, SEMI=33, COMMA=34, DOT=35, 
		ASSIGN=36, GT=37, LT=38, AND=39, OR=40, BANG=41, ADD=42, SUB=43, MUL=44, 
		DIV=45, DQ=46, WS=47, COMMENT=48, LINE_COMMENT=49, IDENTIFIER=50;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'"
	};
	public static final String[] ruleNames = {
		"BOOLEAN", "INSTANCEOF", "CLASS", "ELSE", "EXTENDS", "IF", "INT", "NEW", 
		"PUBLIC", "RETURN", "STATIC", "THIS", "VOID", "WHILE", "MAIN", "ABSTRACT", 
		"STRING", "SOP", "LENGTH", "COEFCLASS", "COEFSUBCLASS", "COEFFECT", "CF", 
		"EXP", "DECIMAL_LITERAL", "BOOL_LITERAL", "LPAREN", "RPAREN", "LBRACE", 
		"RBRACE", "LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", "ASSIGN", "GT", 
		"LT", "AND", "OR", "BANG", "ADD", "SUB", "MUL", "DIV", "DQ", "WS", "COMMENT", 
		"LINE_COMMENT", "IDENTIFIER", "Digits", "LetterOrDigit", "Letter"
	};


	public miniJavaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "miniJava.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\64\u01ae\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3"+
		"\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t"+
		"\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13"+
		"\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3"+
		"\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3"+
		"\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3"+
		"\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3"+
		"\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3"+
		"\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3"+
		"\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3"+
		"\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3"+
		"\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3"+
		"\31\3\32\3\32\3\32\5\32\u0130\n\32\3\32\6\32\u0133\n\32\r\32\16\32\u0134"+
		"\3\32\5\32\u0138\n\32\5\32\u013a\n\32\3\32\5\32\u013d\n\32\3\33\3\33\3"+
		"\33\3\33\3\33\3\33\3\33\3\33\3\33\5\33\u0148\n\33\3\34\3\34\3\35\3\35"+
		"\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3"+
		"\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\6\60\u0175"+
		"\n\60\r\60\16\60\u0176\3\60\3\60\3\61\3\61\3\61\3\61\7\61\u017f\n\61\f"+
		"\61\16\61\u0182\13\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\7\62"+
		"\u018d\n\62\f\62\16\62\u0190\13\62\3\62\3\62\3\63\3\63\7\63\u0196\n\63"+
		"\f\63\16\63\u0199\13\63\3\64\3\64\7\64\u019d\n\64\f\64\16\64\u01a0\13"+
		"\64\3\64\5\64\u01a3\n\64\3\65\3\65\5\65\u01a7\n\65\3\66\3\66\3\66\3\66"+
		"\5\66\u01ad\n\66\3\u0180\2\67\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13"+
		"\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61"+
		"\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61"+
		"a\62c\63e\64g\2i\2k\2\3\2\f\3\2\63;\4\2NNnn\5\2\13\f\16\17\"\"\4\2\f\f"+
		"\17\17\3\2\62;\4\2\62;aa\6\2&&C\\aac|\4\2\2\u0081\ud802\udc01\3\2\ud802"+
		"\udc01\3\2\udc02\ue001\u01b9\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2"+
		"\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\3m\3\2\2\2\5u"+
		"\3\2\2\2\7\u0080\3\2\2\2\t\u0086\3\2\2\2\13\u008b\3\2\2\2\r\u0093\3\2"+
		"\2\2\17\u0096\3\2\2\2\21\u009a\3\2\2\2\23\u009e\3\2\2\2\25\u00a5\3\2\2"+
		"\2\27\u00ac\3\2\2\2\31\u00b3\3\2\2\2\33\u00b8\3\2\2\2\35\u00bd\3\2\2\2"+
		"\37\u00c3\3\2\2\2!\u00c8\3\2\2\2#\u00d1\3\2\2\2%\u00d8\3\2\2\2\'\u00eb"+
		"\3\2\2\2)\u00f2\3\2\2\2+\u0101\3\2\2\2-\u0113\3\2\2\2/\u011d\3\2\2\2\61"+
		"\u0128\3\2\2\2\63\u0139\3\2\2\2\65\u0147\3\2\2\2\67\u0149\3\2\2\29\u014b"+
		"\3\2\2\2;\u014d\3\2\2\2=\u014f\3\2\2\2?\u0151\3\2\2\2A\u0153\3\2\2\2C"+
		"\u0155\3\2\2\2E\u0157\3\2\2\2G\u0159\3\2\2\2I\u015b\3\2\2\2K\u015d\3\2"+
		"\2\2M\u015f\3\2\2\2O\u0161\3\2\2\2Q\u0164\3\2\2\2S\u0167\3\2\2\2U\u0169"+
		"\3\2\2\2W\u016b\3\2\2\2Y\u016d\3\2\2\2[\u016f\3\2\2\2]\u0171\3\2\2\2_"+
		"\u0174\3\2\2\2a\u017a\3\2\2\2c\u0188\3\2\2\2e\u0193\3\2\2\2g\u019a\3\2"+
		"\2\2i\u01a6\3\2\2\2k\u01ac\3\2\2\2mn\7d\2\2no\7q\2\2op\7q\2\2pq\7n\2\2"+
		"qr\7g\2\2rs\7c\2\2st\7p\2\2t\4\3\2\2\2uv\7k\2\2vw\7p\2\2wx\7u\2\2xy\7"+
		"v\2\2yz\7c\2\2z{\7p\2\2{|\7e\2\2|}\7g\2\2}~\7q\2\2~\177\7h\2\2\177\6\3"+
		"\2\2\2\u0080\u0081\7e\2\2\u0081\u0082\7n\2\2\u0082\u0083\7c\2\2\u0083"+
		"\u0084\7u\2\2\u0084\u0085\7u\2\2\u0085\b\3\2\2\2\u0086\u0087\7g\2\2\u0087"+
		"\u0088\7n\2\2\u0088\u0089\7u\2\2\u0089\u008a\7g\2\2\u008a\n\3\2\2\2\u008b"+
		"\u008c\7g\2\2\u008c\u008d\7z\2\2\u008d\u008e\7v\2\2\u008e\u008f\7g\2\2"+
		"\u008f\u0090\7p\2\2\u0090\u0091\7f\2\2\u0091\u0092\7u\2\2\u0092\f\3\2"+
		"\2\2\u0093\u0094\7k\2\2\u0094\u0095\7h\2\2\u0095\16\3\2\2\2\u0096\u0097"+
		"\7k\2\2\u0097\u0098\7p\2\2\u0098\u0099\7v\2\2\u0099\20\3\2\2\2\u009a\u009b"+
		"\7p\2\2\u009b\u009c\7g\2\2\u009c\u009d\7y\2\2\u009d\22\3\2\2\2\u009e\u009f"+
		"\7r\2\2\u009f\u00a0\7w\2\2\u00a0\u00a1\7d\2\2\u00a1\u00a2\7n\2\2\u00a2"+
		"\u00a3\7k\2\2\u00a3\u00a4\7e\2\2\u00a4\24\3\2\2\2\u00a5\u00a6\7t\2\2\u00a6"+
		"\u00a7\7g\2\2\u00a7\u00a8\7v\2\2\u00a8\u00a9\7w\2\2\u00a9\u00aa\7t\2\2"+
		"\u00aa\u00ab\7p\2\2\u00ab\26\3\2\2\2\u00ac\u00ad\7u\2\2\u00ad\u00ae\7"+
		"v\2\2\u00ae\u00af\7c\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1\7k\2\2\u00b1\u00b2"+
		"\7e\2\2\u00b2\30\3\2\2\2\u00b3\u00b4\7v\2\2\u00b4\u00b5\7j\2\2\u00b5\u00b6"+
		"\7k\2\2\u00b6\u00b7\7u\2\2\u00b7\32\3\2\2\2\u00b8\u00b9\7x\2\2\u00b9\u00ba"+
		"\7q\2\2\u00ba\u00bb\7k\2\2\u00bb\u00bc\7f\2\2\u00bc\34\3\2\2\2\u00bd\u00be"+
		"\7y\2\2\u00be\u00bf\7j\2\2\u00bf\u00c0\7k\2\2\u00c0\u00c1\7n\2\2\u00c1"+
		"\u00c2\7g\2\2\u00c2\36\3\2\2\2\u00c3\u00c4\7o\2\2\u00c4\u00c5\7c\2\2\u00c5"+
		"\u00c6\7k\2\2\u00c6\u00c7\7p\2\2\u00c7 \3\2\2\2\u00c8\u00c9\7c\2\2\u00c9"+
		"\u00ca\7d\2\2\u00ca\u00cb\7u\2\2\u00cb\u00cc\7v\2\2\u00cc\u00cd\7t\2\2"+
		"\u00cd\u00ce\7c\2\2\u00ce\u00cf\7e\2\2\u00cf\u00d0\7v\2\2\u00d0\"\3\2"+
		"\2\2\u00d1\u00d2\7U\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4\7t\2\2\u00d4\u00d5"+
		"\7k\2\2\u00d5\u00d6\7p\2\2\u00d6\u00d7\7i\2\2\u00d7$\3\2\2\2\u00d8\u00d9"+
		"\7U\2\2\u00d9\u00da\7{\2\2\u00da\u00db\7u\2\2\u00db\u00dc\7v\2\2\u00dc"+
		"\u00dd\7g\2\2\u00dd\u00de\7o\2\2\u00de\u00df\7\60\2\2\u00df\u00e0\7q\2"+
		"\2\u00e0\u00e1\7w\2\2\u00e1\u00e2\7v\2\2\u00e2\u00e3\7\60\2\2\u00e3\u00e4"+
		"\7r\2\2\u00e4\u00e5\7t\2\2\u00e5\u00e6\7k\2\2\u00e6\u00e7\7p\2\2\u00e7"+
		"\u00e8\7v\2\2\u00e8\u00e9\7n\2\2\u00e9\u00ea\7p\2\2\u00ea&\3\2\2\2\u00eb"+
		"\u00ec\7n\2\2\u00ec\u00ed\7g\2\2\u00ed\u00ee\7p\2\2\u00ee\u00ef\7i\2\2"+
		"\u00ef\u00f0\7j\2\2\u00f0\u00f1\7v\2\2\u00f1(\3\2\2\2\u00f2\u00f3\7B\2"+
		"\2\u00f3\u00f4\7E\2\2\u00f4\u00f5\7q\2\2\u00f5\u00f6\7g\2\2\u00f6\u00f7"+
		"\7h\2\2\u00f7\u00f8\7h\2\2\u00f8\u00f9\7g\2\2\u00f9\u00fa\7e\2\2\u00fa"+
		"\u00fb\7v\2\2\u00fb\u00fc\7E\2\2\u00fc\u00fd\7n\2\2\u00fd\u00fe\7c\2\2"+
		"\u00fe\u00ff\7u\2\2\u00ff\u0100\7u\2\2\u0100*\3\2\2\2\u0101\u0102\7B\2"+
		"\2\u0102\u0103\7E\2\2\u0103\u0104\7q\2\2\u0104\u0105\7g\2\2\u0105\u0106"+
		"\7h\2\2\u0106\u0107\7h\2\2\u0107\u0108\7g\2\2\u0108\u0109\7e\2\2\u0109"+
		"\u010a\7v\2\2\u010a\u010b\7C\2\2\u010b\u010c\7w\2\2\u010c\u010d\7z\2\2"+
		"\u010d\u010e\7E\2\2\u010e\u010f\7n\2\2\u010f\u0110\7c\2\2\u0110\u0111"+
		"\7u\2\2\u0111\u0112\7u\2\2\u0112,\3\2\2\2\u0113\u0114\7B\2\2\u0114\u0115"+
		"\7E\2\2\u0115\u0116\7q\2\2\u0116\u0117\7g\2\2\u0117\u0118\7h\2\2\u0118"+
		"\u0119\7h\2\2\u0119\u011a\7g\2\2\u011a\u011b\7e\2\2\u011b\u011c\7v\2\2"+
		"\u011c.\3\2\2\2\u011d\u011e\7e\2\2\u011e\u011f\7q\2\2\u011f\u0120\7g\2"+
		"\2\u0120\u0121\7h\2\2\u0121\u0122\7h\2\2\u0122\u0123\7E\2\2\u0123\u0124"+
		"\7n\2\2\u0124\u0125\7c\2\2\u0125\u0126\7u\2\2\u0126\u0127\7u\2\2\u0127"+
		"\60\3\2\2\2\u0128\u0129\7g\2\2\u0129\u012a\7z\2\2\u012a\u012b\7r\2\2\u012b"+
		"\62\3\2\2\2\u012c\u013a\7\62\2\2\u012d\u0137\t\2\2\2\u012e\u0130\5g\64"+
		"\2\u012f\u012e\3\2\2\2\u012f\u0130\3\2\2\2\u0130\u0138\3\2\2\2\u0131\u0133"+
		"\7a\2\2\u0132\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134\u0132\3\2\2\2\u0134"+
		"\u0135\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u0138\5g\64\2\u0137\u012f\3\2"+
		"\2\2\u0137\u0132\3\2\2\2\u0138\u013a\3\2\2\2\u0139\u012c\3\2\2\2\u0139"+
		"\u012d\3\2\2\2\u013a\u013c\3\2\2\2\u013b\u013d\t\3\2\2\u013c\u013b\3\2"+
		"\2\2\u013c\u013d\3\2\2\2\u013d\64\3\2\2\2\u013e\u013f\7v\2\2\u013f\u0140"+
		"\7t\2\2\u0140\u0141\7w\2\2\u0141\u0148\7g\2\2\u0142\u0143\7h\2\2\u0143"+
		"\u0144\7c\2\2\u0144\u0145\7n\2\2\u0145\u0146\7u\2\2\u0146\u0148\7g\2\2"+
		"\u0147\u013e\3\2\2\2\u0147\u0142\3\2\2\2\u0148\66\3\2\2\2\u0149\u014a"+
		"\7*\2\2\u014a8\3\2\2\2\u014b\u014c\7+\2\2\u014c:\3\2\2\2\u014d\u014e\7"+
		"}\2\2\u014e<\3\2\2\2\u014f\u0150\7\177\2\2\u0150>\3\2\2\2\u0151\u0152"+
		"\7]\2\2\u0152@\3\2\2\2\u0153\u0154\7_\2\2\u0154B\3\2\2\2\u0155\u0156\7"+
		"=\2\2\u0156D\3\2\2\2\u0157\u0158\7.\2\2\u0158F\3\2\2\2\u0159\u015a\7\60"+
		"\2\2\u015aH\3\2\2\2\u015b\u015c\7?\2\2\u015cJ\3\2\2\2\u015d\u015e\7@\2"+
		"\2\u015eL\3\2\2\2\u015f\u0160\7>\2\2\u0160N\3\2\2\2\u0161\u0162\7(\2\2"+
		"\u0162\u0163\7(\2\2\u0163P\3\2\2\2\u0164\u0165\7~\2\2\u0165\u0166\7~\2"+
		"\2\u0166R\3\2\2\2\u0167\u0168\7#\2\2\u0168T\3\2\2\2\u0169\u016a\7-\2\2"+
		"\u016aV\3\2\2\2\u016b\u016c\7/\2\2\u016cX\3\2\2\2\u016d\u016e\7,\2\2\u016e"+
		"Z\3\2\2\2\u016f\u0170\7\61\2\2\u0170\\\3\2\2\2\u0171\u0172\7$\2\2\u0172"+
		"^\3\2\2\2\u0173\u0175\t\4\2\2\u0174\u0173\3\2\2\2\u0175\u0176\3\2\2\2"+
		"\u0176\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u0178\3\2\2\2\u0178\u0179"+
		"\b\60\2\2\u0179`\3\2\2\2\u017a\u017b\7\61\2\2\u017b\u017c\7,\2\2\u017c"+
		"\u0180\3\2\2\2\u017d\u017f\13\2\2\2\u017e\u017d\3\2\2\2\u017f\u0182\3"+
		"\2\2\2\u0180\u0181\3\2\2\2\u0180\u017e\3\2\2\2\u0181\u0183\3\2\2\2\u0182"+
		"\u0180\3\2\2\2\u0183\u0184\7,\2\2\u0184\u0185\7\61\2\2\u0185\u0186\3\2"+
		"\2\2\u0186\u0187\b\61\2\2\u0187b\3\2\2\2\u0188\u0189\7\61\2\2\u0189\u018a"+
		"\7\61\2\2\u018a\u018e\3\2\2\2\u018b\u018d\n\5\2\2\u018c\u018b\3\2\2\2"+
		"\u018d\u0190\3\2\2\2\u018e\u018c\3\2\2\2\u018e\u018f\3\2\2\2\u018f\u0191"+
		"\3\2\2\2\u0190\u018e\3\2\2\2\u0191\u0192\b\62\2\2\u0192d\3\2\2\2\u0193"+
		"\u0197\5k\66\2\u0194\u0196\5i\65\2\u0195\u0194\3\2\2\2\u0196\u0199\3\2"+
		"\2\2\u0197\u0195\3\2\2\2\u0197\u0198\3\2\2\2\u0198f\3\2\2\2\u0199\u0197"+
		"\3\2\2\2\u019a\u01a2\t\6\2\2\u019b\u019d\t\7\2\2\u019c\u019b\3\2\2\2\u019d"+
		"\u01a0\3\2\2\2\u019e\u019c\3\2\2\2\u019e\u019f\3\2\2\2\u019f\u01a1\3\2"+
		"\2\2\u01a0\u019e\3\2\2\2\u01a1\u01a3\t\6\2\2\u01a2\u019e\3\2\2\2\u01a2"+
		"\u01a3\3\2\2\2\u01a3h\3\2\2\2\u01a4\u01a7\5k\66\2\u01a5\u01a7\t\6\2\2"+
		"\u01a6\u01a4\3\2\2\2\u01a6\u01a5\3\2\2\2\u01a7j\3\2\2\2\u01a8\u01ad\t"+
		"\b\2\2\u01a9\u01ad\n\t\2\2\u01aa\u01ab\t\n\2\2\u01ab\u01ad\t\13\2\2\u01ac"+
		"\u01a8\3\2\2\2\u01ac\u01a9\3\2\2\2\u01ac\u01aa\3\2\2\2\u01adl\3\2\2\2"+
		"\21\2\u012f\u0134\u0137\u0139\u013c\u0147\u0176\u0180\u018e\u0197\u019e"+
		"\u01a2\u01a6\u01ac\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}